version: '3.8'

services:
  mcp-server-tcp:
    build:
      context: ./agent_a
    volumes:
      - agent_a_web_out:/app/out

  agent_a_web:
    build:
      context: ./agent_a_web
      additional_contexts:
        agent_a: ./agent_a
    ports:
      - "8090:8000"
    volumes:
      - agent_a_web_out:/app/out

  chromadb:
    image: chromadb/chroma:latest
    container_name: chromadb
    ports: !override
      - "8001:8000"

  autonomous-council-api:
    build:
      context: ./agent_c
      dockerfile: Dockerfile
    ports: !override
      - "8080:8000"
    environment:
      - MODEL_PATH=/app/models/Llama-3.2-3B-Instruct
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - EXPERTISE_DB_NAME=expertise_db
      - INCIDENT_DB_NAME=incident_db
    volumes:
      - agent_a_web_out:/app/out

  postgres:
    image: postgres:15
    ports: !override
      - "5432:5432"

  backend:
    build:
      context: ./agent_d/backend
      dockerfile: Dockerfile
    ports: !override
      - "8000:8000"
    volumes:
      - agent_a_web_out:/app/out

  frontend-react:
    build:
      context: ./agent_d/frontend-react
      dockerfile: Dockerfile
    ports: !override
      - "3000:3000"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: toor
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbitmq_management load_definitions "/etc/rabbitmq/definitions.json"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq-definitions.json:/etc/rabbitmq/definitions.json:ro

volumes:
  rabbitmq_data:
  agent_a_web_out:
